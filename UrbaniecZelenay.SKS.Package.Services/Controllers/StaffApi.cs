/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using System.ComponentModel.DataAnnotations;
using AutoMapper;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using UrbaniecZelenay.SKS.Package.BusinessLogic;
using UrbaniecZelenay.SKS.Package.BusinessLogic.Entities.Exceptions;
using UrbaniecZelenay.SKS.Package.BusinessLogic.Interfaces;
using UrbaniecZelenay.SKS.Package.DataAccess.Interfaces;
using UrbaniecZelenay.SKS.Package.DataAccess.Sql;
using UrbaniecZelenay.SKS.Package.Services.Attributes;
using UrbaniecZelenay.SKS.Package.Services.DTOs;

namespace UrbaniecZelenay.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StaffApiController : ControllerBase
    {
        private readonly IStaffLogic staffLogic;
        private readonly IMapper mapper;
        private readonly ILogger<StaffApiController> logger;

        public StaffApiController(ILogger<StaffApiController> logger, IMapper mapper, IStaffLogic staffLogic)
        {
            this.logger = logger;
            this.staffLogic = staffLogic;
            this.mapper = mapper;
        }

        /// <summary>
        /// Report that a Parcel has been delivered at it&#x27;s final destination address. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID. </response>
        [HttpPost]
        [Route("/parcel/{trackingId}/reportDelivery/")]
        [ValidateModelState]
        [SwaggerOperation("ReportParcelDelivery")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelDelivery(
            [FromRoute] [Required] [RegularExpression(@"^[A-Z0-9]{9}$")]
            string trackingId)
        {
            logger.LogInformation($"Report Parcel Delivery for ID {trackingId}");
            try
            {
                staffLogic.ReportParcelDelivery(trackingId);
            }
            catch (BlArgumentException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel delivery.");
                return StatusCode(400, new Error
                {
                    // For security purposes only the last error message in the stack is shown to the end user!
                    ErrorMessage = ex.Message
                });
            }
            catch (BlValidationException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel delivery.");
                return StatusCode(400, new Error
                {
                    ErrorMessage = ex.Message
                });
            }
            catch (BlDataNotFoundException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel delivery.");
                return StatusCode(404, new Error
                {
                    ErrorMessage = ex.Message
                });
            }
            catch (BlRepositoryException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel delivery.");
                return StatusCode(500, new Error
                {
                    ErrorMessage = ex.Message
                });
            }

            return StatusCode(200);
        }

        /// <summary>
        /// Report that a Parcel has arrived at a certain hop either Warehouse or Truck. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <param name="code">The Code of the hop (Warehouse or Truck).</param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID or hop with code not found. </response>
        [HttpPost]
        [Route("/parcel/{trackingId}/reportHop/{code}")]
        [ValidateModelState]
        [SwaggerOperation("ReportParcelHop")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelHop(
            [FromRoute] [Required] [RegularExpression(@"^[A-Z0-9]{9}$")]
            string trackingId,
            [FromRoute] [Required] [RegularExpression(@"^[A-Z]{4}\d{1,4}$")]
            string code)
        {
            logger.LogInformation($"Report Parcel Hop for Parcel with ID {trackingId}");
            try
            {
                staffLogic.ReportParcelHop(trackingId, code);
            }
            catch (BlArgumentException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel hop.");
                return StatusCode(400, new Error
                {
                    // For security purposes only the last error message in the stack is shown to the end user!
                    ErrorMessage = ex.Message
                });
            }
            catch (BlValidationException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel hop.");
                return StatusCode(400, new Error
                {
                    ErrorMessage = ex.Message
                });
            }
            catch (BlDataNotFoundException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel hop.");
                return StatusCode(404, new Error
                {
                    ErrorMessage = ex.Message
                });
            }
            catch (BlRepositoryException ex)
            {
                logger.LogError(ex, "Error occured while reporting parcel hop.");
                return StatusCode(500, new Error
                {
                    ErrorMessage = ex.Message
                });
            }

            return StatusCode(200);
        }
    }
}