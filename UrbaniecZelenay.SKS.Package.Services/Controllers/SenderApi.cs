/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using AutoMapper;
using UrbaniecZelenay.SKS.Package.BusinessLogic;
using UrbaniecZelenay.SKS.Package.BusinessLogic.Interfaces;
using UrbaniecZelenay.SKS.Package.Services.Attributes;
using UrbaniecZelenay.SKS.Package.Services.DTOs;
using BlParcel = UrbaniecZelenay.SKS.Package.BusinessLogic.Entities.Parcel;

namespace UrbaniecZelenay.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SenderApiController : ControllerBase
    {
        private readonly ISenderLogic senderLogic;
        private readonly IMapper mapper;
        
        public SenderApiController(IMapper mapper)
        {
            this.senderLogic = new SenderLogic();
            this.mapper = mapper;
        }
        
        /// <summary>
        /// Submit a new parcel to the logistics service. 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Successfully submitted the new parcel</response>
        /// <response code="400">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/parcel")]
        [ValidateModelState]
        [SwaggerOperation("SubmitParcel")]
        [SwaggerResponse(statusCode: 201, type: typeof(NewParcelInfo),
            description: "Successfully submitted the new parcel")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult SubmitParcel([FromBody] Parcel body)
        {
            // if (body == null)
            // {
            //     return StatusCode(400, new Error
            //     {
            //         ErrorMessage = "No parcel given"
            //     });
            // }
            // //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // // return StatusCode(201, default(NewParcelInfo));
            //
            // //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // // return StatusCode(400, default(Error));
            // string exampleJson = null;
            // exampleJson = "{\n  \"trackingId\" : \"PYJRB4HZ6\"\n}";
            //
            // var example = exampleJson != null
            //     ? JsonConvert.DeserializeObject<NewParcelInfo>(exampleJson)
            //     : default(NewParcelInfo); //TODO: Change the data returned
            // return new ObjectResult(example);
            
            var blParcel = mapper.Map<BlParcel>(body);
            
            BlParcel blResult;
            try
            {
                blResult = senderLogic.SubmitParcel(blParcel);
            }
            catch (ArgumentNullException)
            {
                return StatusCode(400, new Error
                {
                    ErrorMessage = "Invalid Payload"
                });
            }
            catch (ArgumentException ex)
            {
                return StatusCode(400, new Error
                {
                    ErrorMessage = ex.Message
                });
            }

            var svcResult = mapper.Map<NewParcelInfo>(blResult);
            return StatusCode(201, svcResult);
        }
    }
}